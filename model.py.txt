import pandas as pd
from sklearn.model_selection import train_test_split
from sklearn.ensemble import RandomForestClassifier
from sklearn.preprocessing import StandardScaler
import pickle
# Load the Cleveland dataset
data = pd.read_csv('heart_disease.csv', header=None)
data.columns = ['age', 'sex', 'cp', 'trestbps', 'chol', 'fbs', 'restecg', 'thalach',
'exang', 'oldpeak', 'slope', 'ca', 'thal', 'target']
data = data.replace('?', pd.NA)
data = data.dropna()
data['target'] = pd.to_numeric(data['target'])
# Separate features and target
X = data.drop('target', axis=1)
y = data['target']
# Convert categorical features
X = pd.get_dummies(X, columns=['cp', 'restecg', 'slope', 'thal'])
# Store the column names before scaling
column_names = X.columns
# Scale numerical features
scaler = StandardScaler()
X_scaled = scaler.fit_transform(X)
# Split data
45
X_train, X_test, y_train, y_test = train_test_split(X_scaled, y, test_size=0.2, random_state=42)
# Train model
model = RandomForestClassifier(random_state=42)
model.fit(X_train, y_train)
# Save the model
with open('heart_disease_model.pkl', 'wb') as f:
pickle.dump(model, f)
# Save the scaler
with open('heart_disease_scaler.pkl', 'wb') as f:
pickle.dump(scaler, f)
# Save the column names
with open('heart_disease_columns.pkl', 'wb') as f:
pickle.dump(column_names.tolist(), f)